// Copyright (c) 2019 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=3421dff567c08f141497bcf3eb9f2919e538d8af$
//

#ifndef CEF_LIBCEF_DLL_CTOCPP_AUDIO_HANDLER_CTOCPP_H_
#define CEF_LIBCEF_DLL_CTOCPP_AUDIO_HANDLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_CEF_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/cef_audio_handler_capi.h"
#include "include/cef_audio_handler.h"
#include "libcef_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class CefAudioHandlerCToCpp : public CefCToCppRefCounted<CefAudioHandlerCToCpp,
                                                         CefAudioHandler,
                                                         cef_audio_handler_t> {
 public:
  CefAudioHandlerCToCpp();

  // CefAudioHandler methods.
  void OnAudioStreamStarted(CefRefPtr<CefBrowser> browser,
                            int audio_stream_id,
                            int channels,
                            ChannelLayout channel_layout,
                            int sample_rate,
                            int frames_per_buffer) override;
  void OnAudioStreamPacket(CefRefPtr<CefBrowser> browser,
                           int audio_stream_id,
                           const void** data,
                           int frames,
                           int64_t pts) override;
  void OnAudioStreamStopped(CefRefPtr<CefBrowser> browser,
                            int audio_stream_id) override;
};

#endif  // CEF_LIBCEF_DLL_CTOCPP_AUDIO_HANDLER_CTOCPP_H_
